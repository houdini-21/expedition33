services:
  db:
    image: postgres:16-alpine
    container_name: backend-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-schedule}
      POSTGRES_USER: ${POSTGRES_USER:-houdini}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-whoami}
    ports: ["55432:5432"]
    volumes: ["db_data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/houdini-21/expedition33/backend:${IMAGE_TAG:-latest}
    container_name: backend-api
    env_file:
      - ./backend.env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://houdini:whoami@db:5432/schedule?schema=public}
    depends_on:
      db:
        condition: service_healthy
    ports: ["4000:4000"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:4000/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  web:
    image: ghcr.io/houdini-21/expedition33/frontend:${IMAGE_TAG:-latest}
    container_name: frontend-web
    environment:
      NODE_ENV: production
      PORT: 3000
    depends_on:
      api:
        condition: service_started
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/"]
      interval: 20s
      timeout: 5s
      retries: 5

volumes:
  db_data:
